parameters:
  provisionStorage: true
  TerraformVersion: 1.1.6
  TerraformBackendServiceConnection: ''
  TerraformEnvironmentServiceConnection: ''
  TerraformBackendResourceGroup: 'gridwich-terraform-rg'
  TerraformBackendStorageAccount: gridwichtfstate
  TerraformBackendStorageContainer: terraformstate
  TerraformBackendLocation: 'West US'
  TerraformPlanBranches:
  - '''refs/heads/main'''
  TerraformReleaseBranchPrefix: '''refs/heads/release/'''
# Expects parameters from parent:
#   TerraformDirectory
#   environment
# Note that passed parameters can NOT be used in task.condition statements, they will be NULL.

steps:

- task: AzureCLI@1
  displayName: Set up Terraform backend
  condition: and(succeeded(), ${{ parameters.provisionStorageÂ }})
  inputs:
    azureSubscription: ${{ parameters.TerraformBackendServiceConnection }}
    scriptLocation: inlineScript
    inlineScript: |
      set -eu  # fail on error
      export AZURE_STORAGE_ACCOUNT='${{ parameters.TerraformBackendStorageAccount }}${{ parameters.environment }}'
      container='${{ parameters.TerraformBackendStorageContainer }}'
      if ! az storage container exists -n "$container" -o none; then
        az configure --defaults group='${{ parameters.TerraformBackendResourceGroup }}' location='${{ parameters.TerraformBackendLocation }}'
        az group create -n '${{ parameters.TerraformBackendResourceGroup }}' -o none
        az storage account create -n "$AZURE_STORAGE_ACCOUNT" -o none
        az storage container create -n "$container" -o none
      fi
      blob='${{ parameters.applicationName }}${{ parameters.environment }}.tfstate'
      if [[ $(az storage blob exists -c "$container" -n "$blob" --query exists) = "true" ]]; then
        if [[ $(az storage blob show -c "$container" -n "$blob" --query "properties.lease.status=='locked'") = "true" ]]; then
          echo "State is leased"
          lock_jwt=$(az storage blob show -c "$container" -n "$blob" --query metadata.terraformlockid -o tsv)
          if [ "$lock_jwt" != "" ]; then
            lock_json=$(base64 -d <<< "$lock_jwt")
            echo "State is locked"
            jq . <<< "$lock_json"
          fi
          if [ "${TERRAFORM_BREAK_LEASE:-}" != "" ]; then
            az storage blob lease break -c "$container" -b "$blob"
          else
            echo "If you're really sure you want to break the lease, rerun the pipeline with variable TERRAFORM_BREAK_LEASE set to 1."
            exit 1
          fi
        fi
      fi
    addSpnToEnvironment: true

- task: TerraformInstaller@0
  displayName: Install Terraform
  inputs:
    terraformVersion: ${{ parameters.TerraformVersion }}

- task: TerraformTaskV2@2
  displayName: Terraform init
  inputs:
    provider: "azurerm"
    command: "init"
    workingDirectory: ${{ parameters.TerraformDirectory }}
    backendServiceArm: ${{ parameters.TerraformBackendServiceConnection }}
    backendAzureRmResourceGroupName: ${{ parameters.TerraformBackendResourceGroup }}
    backendAzureRmStorageAccountName: ${{ parameters.TerraformBackendStorageAccount }}${{ parameters.environment }}
    backendAzureRmContainerName: ${{ parameters.TerraformBackendStorageContainer }}
    backendAzureRmKey: ${{ parameters.applicationName }}${{ parameters.environment }}.tfstate

- task: AzureCLI@1
  displayName: Get ARM credentials for Terraform
  condition: and(succeeded(), or(in(variables['Build.SourceBranch'], ${{join(',', parameters.TerraformPlanBranches)}}), variables['RUN_FLAG_TERRAFORM'], startsWith(variables['Build.SourceBranch'], ${{ parameters.TerraformReleaseBranchPrefix }})))
  inputs:
    azureSubscription: ${{ parameters.TerraformEnvironmentServiceConnection }}
    scriptLocation: inlineScript
    inlineScript: |
      set -eu
      subscriptionId=$(az account show --query id -o tsv)
      echo "##vso[task.setvariable variable=ARM_CLIENT_ID]$servicePrincipalId"
      echo "##vso[task.setvariable variable=ARM_CLIENT_SECRET;issecret=true]$servicePrincipalKey"
      echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID]$subscriptionId"
      echo "##vso[task.setvariable variable=ARM_TENANT_ID]$tenantId"
    addSpnToEnvironment: true
